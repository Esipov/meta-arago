# Name and version of the distribution
DISTRO_NAME = "Arago"
DISTRO_VERSION = "2017.03"
DISTRO_FEED_URI ?= "http://lcpd.gt.design.ti.com"
BUILD_VARIANT = "${@['prod','rt','systest'][int(d.getVar('ARAGO_RT_ENABLE', True))+int(d.getVar('ARAGO_SYSTEST_ENABLE', True))*2]}"
FEEDURIPREFIX ?= "packages/${DISTRO}-morty/${BUILD_VARIANT}/"

OPKG_ARGS_remove = "--prefer-arch-to-version"

MIRRORS += " \
ftp://.*/.*       http://arago-project.org/files/sources/ \n \
https?$://.*/.*   http://arago-project.org/files/sources/ \n \
"

# SDK paths and names
SDK_NAME_PREFIX = "arago"
SDK_VERSION = "${DISTRO_VERSION}"
SDK_VENDOR = "-${SDK_NAME_PREFIX}"
SDK_NAME = "${SDK_NAME_PREFIX}-${SDK_VERSION}"
SDKPATH_REAL = "/usr/local/${SDK_NAME_PREFIX}-${SDK_VERSION}"
SDKPATH = "${@"/tmp/"+"x"*96+"/"+"y"*96}"

IMAGE_CLASSES += "image_types_md5"
IMAGE_FSTYPES += "tar.xz.md5"

# FIT image for secure devices
KERNEL_CLASSES += "kernel-fitimage"
FITIMAGE_HASH_ALGO = ""
FITIMAGE_DTB_BY_NAME = "1"
FITIMAGE_TEE_BY_NAME = "1"
FITIMAGE_CONF_BY_NAME = "1"

KERNEL_IMAGETYPES_dra7xx-hs-evm = "zImage fitImage"
INITRAMFS_IMAGE_dra7xx-hs-evm = "arago-base-tisdk-image"
INITRAMFS_FSTYPES_dra7xx-hs-evm = "cpio.xz"

KERNEL_IMAGETYPES_am57xx-hs-evm = "zImage fitImage"
INITRAMFS_IMAGE_am57xx-hs-evm = "arago-base-tisdk-image"
INITRAMFS_FSTYPES_am57xx-hs-evm = "cpio.xz"

KERNEL_IMAGETYPES_am437x-hs-evm = "zImage fitImage"
INITRAMFS_IMAGE_am437x-hs-evm = "arago-base-tisdk-image"
INITRAMFS_FSTYPES_am437x-hs-evm = "cpio.xz"

KERNEL_IMAGETYPES_am335x-hs-evm = "zImage fitImage"
INITRAMFS_IMAGE_am335x-hs-evm = "arago-base-tisdk-image"
INITRAMFS_FSTYPES_am335x-hs-evm = "cpio.xz"

KERNEL_IMAGETYPES_k2e-hs-evm = "zImage fitImage"
INITRAMFS_IMAGE_k2e-hs-evm = "arago-base-tisdk-image"
INITRAMFS_FSTYPES_k2e-hs-evm = "cpio.xz"

# Mask any broken recipes (currently none)
#BBMASK = ""

# Start with default set of distro features
DISTRO_FEATURES = "${DISTRO_FEATURES_DEFAULT} ${DISTRO_FEATURES_LIBC}"

# Remove some unwanted features
DISTRO_FEATURES_remove = "x11"

# Add additional distro features
DISTRO_FEATURES_append = " pam wayland opengl"

# Set global runtime providers for major components
ARAGO_SYSVINIT ?= "0"
VIRTUAL-RUNTIME_dev_manager = "${@base_conditional("ARAGO_SYSVINIT", "1", "udev", "systemd", d)}"
VIRTUAL-RUNTIME_init_manager = "${@base_conditional("ARAGO_SYSVINIT", "1", "sysvinit", "systemd", d)}"
VIRTUAL-RUNTIME_initscripts = "${@base_conditional("ARAGO_SYSVINIT", "1", "initscripts", "systemd-compat-units", d)}"
VIRTUAL-RUNTIME_login_manager = "busybox shadow"

DISTRO_FEATURES_append = "${@base_conditional("ARAGO_SYSVINIT", "1", "", " systemd", d)}"

# Set preferred Qt version
QT_PROVIDER ?= "qt5"

# Distro-specific package configuration
PACKAGECONFIG_pn-weston = "egl kms launch clients"

# Configure Qt5 flags (GLES is still required for qtdeclarative and qtwebkit)
PACKAGECONFIG_GL_pn-qtbase = "gles2 linuxfb"
PACKAGECONFIG_DISTRO_pn-qtbase = "icu examples"

# Add gstreamer in package configuration to enable video
PACKAGECONFIG_append_pn-qtmultimedia  = " gstreamer"

# Prefer OpenSSL over GnuTLS for curl due to TSU exemptions
PACKAGECONFIG_pn-curl = "${@bb.utils.contains("DISTRO_FEATURES", "ipv6", "ipv6", "", d)} ssl zlib"

# No GFX on Keystone
PACKAGECONFIG_remove_pn-gstreamer1.0-plugins-bad_keystone = "wayland egl gles2"

# Enable UI and scripting for perf
PERF_FEATURES_ENABLE ?= "perf-scripting perf-tui"

ARAGO_KERNEL_SUFFIX ?= ""

# Set real-time kernel suffix
ARAGO_RT_ENABLE ?= "0"
ARAGO_KERNEL_SUFFIX_append = "${@base_conditional("ARAGO_RT_ENABLE", "1", "-rt", "", d)}"

# Set systest kernel suffix
ARAGO_SYSTEST_ENABLE ?= "0"
ARAGO_KERNEL_SUFFIX_append = "${@base_conditional("ARAGO_SYSTEST_ENABLE", "1", "-systest", "", d)}"
IMAGE_FSTYPES_remove = "${@['','ubi'][d.getVar('ARAGO_SYSTEST_ENABLE', True) == '1']}"

# Toolchain should be selected by setting TOOLCHAIN_BRAND in local.conf
# Set some sane defaults, in case someone forgets to set them in local.conf
TC_SANE_DEFAULT ?= "linaro"
TOOLCHAIN_TYPE ?= "external"
TOOLCHAIN_BRAND ?= "${@[d.getVar('TC_SANE_DEFAULT', True),'gcc'][d.getVar('TOOLCHAIN_TYPE', True) == 'internal']}"

require conf/distro/include/toolchain-${TOOLCHAIN_BRAND}.inc
require conf/distro/include/toolchain-${TOOLCHAIN_TYPE}.inc

# Enable basic stack and buffer overflow protections
#TARGET_CPPFLAGS += "-fstack-protector -D_FORTIFY_SOURCE=1"
#TARGET_CPPFLAGS += "-fstack-protector"

# Load default preferences
require conf/distro/include/arago-prefs.inc

# Enable generation of source packages for SDKs
require conf/distro/include/arago-source-ipk.inc

# Allow branding on top of Arago Distro and Core TI-SDK
# If ARAGO_BRAND is not set in local.conf, default to core
ARAGO_BRAND ??= "core"

require conf/distro/include/branding-${ARAGO_BRAND}.inc

# Disable polkit's systemd configuration from meta-oe
POLKITAUTH = ""

# Set ENTERPRISE_DISTRO flag to ensure that recipes that have been flagged
# do not attempt to enable features that have potential commercial
# licensing issues.
ENTERPRISE_DISTRO = "1"

# oe-core uses external libav instead of internal libav for gst-ffmpeg. We
# disable by default the codecs in libav that causes issues with shipping an
# Arago based SDK. No need to prevent gst-ffmpeg from being used since we
# disable troublesome software.
LICENSE_FLAGS_WHITELIST = "commercial_gst-ffmpeg commercial_gstreamer1.0-libav"
